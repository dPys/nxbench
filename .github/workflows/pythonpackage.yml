name: Python Package

on:
  push:
    branches:
      - '**'

jobs:
  build:
    if: "!startsWith(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U build pip twine
          pip install -e .[doc,test]

      - name: Build and check package
        run: |
          python -m build --sdist --wheel
          python -m twine check dist/*

      - name: Verify installation from pip
        run: |
          pip install .
          python -c 'import nxbench; print(nxbench.__version__)'

      - name: Verify installation from sdist
        run: |
          pip install dist/nxbench-*.tar.gz
          python -c 'import nxbench; print(nxbench.__version__)'

      - name: Verify installation from wheel
        run: |
          pip install dist/nxbench-*.whl
          python -c 'import nxbench; print(nxbench.__version__)'
